---
kind: pipeline
type: docker
name: default-build

workspace:
  path: /stargaze

steps:
  - name: fetch
    image: alpine/git
    commands:
      - git fetch --tags
  - name: restore-cache
    image: meltwater/drone-cache:dev
    volumes:
      - name: cache
        path: /go
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: minio_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: minio_secret_key
    pull: true
    settings:
      restore: true
      bucket:
        from_secret: minio_bucket
      region: us-east-1
      mount:
        - '/go/pkg/mod'

  - name: test
    image: publicawesome/golang:1.18.0-devtooling
    volumes:
      - name: cache
        path: /go
    commands:
      - ./scripts/go-test.sh
    environment:
      GOPROXY: http://goproxy
  - name: build
    image: golang:1.18-alpine3.15
    volumes:
      - name: cache
        path: /go
    commands:
      - apk add --no-cache ca-certificates build-base git
      - wget https://github.com/CosmWasm/wasmvm/releases/download/v1.0.0-beta6/libwasmvm_muslc.a -O /lib/libwasmvm_muslc.a
      - echo "e9cb9517585ce3477905e2d4e37553d85f6eac29bdc3b9c25c37c8f5e554045c  /lib/libwasmvm_muslc.a" | sha256sum -c
      - LEDGER_ENABLED=false BUILD_TAGS=muslc make build
    environment:
      GOPROXY: http://goproxy
  - name: coverage
    image: plugins/codecov
    volumes:
      - name: cache
        path: /go
    settings:
      required: true
      token:
        from_secret: codecov-token
    when:
      event:
        - push
        - pull_request
  - name: publish-alpha
    image: plugins/docker:18
    settings:
      dockerfile: docker/Dockerfile
      repo: publicawesome/stargaze
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      tags:
        - latest
    when:
      event:
        - push
      branch:
        - main
  - name: trigger
    image: plugins/downstream
    settings:
      server:
        from_secret: ci_server
      token:
        from_secret: ci_token
      deploy: deploy-devnet
      last_successful: true
      fork: true
      repositories:
        from_secret: downstream_repositories
    when:
      branch: 
        - develop
      event:
        - push
  - name: docker_release
    image: plugins/docker:18
    settings:
      dockerfile: docker/Dockerfile
      repo: publicawesome/stargaze
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      auto_tag: true
    when:
      event:
        - tag

  - name: release
    image: golang:1.18.0
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    commands:
      - curl -sL https://git.io/goreleaser | bash
    environment:
      GOPROXY: http://goproxy
    when:
      event:
        - tag
  - name: rebuild-cache
    image: meltwater/drone-cache:dev
    volumes:
      - name: cache
        path: /go
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: minio_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: minio_secret_key
    pull: true
    settings:
      rebuild: true
      bucket:
        from_secret: minio_bucket
      region: us-east-1
      mount:
        - '/go/pkg/mod'
  - name: discord
    image: appleboy/drone-discord
    settings:
      webhook_id: 
        from_secret: discord_webhook_id
      webhook_token: 
        from_secret: discord_webhook_token
    when:
      status: [success, failure]

volumes:
- name: cache
  temp: {}
---
kind: pipeline
type: docker
name: ibc-integration-test

steps:
  - name: restore-cache
    image: meltwater/drone-cache:dev
    volumes:
      - name: cache
        path: /go
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: minio_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: minio_secret_key
    pull: true
    settings:
      restore: true
      bucket:
        from_secret: minio_bucket
      region: us-east-1
      mount:
        - '/go/pkg/mod'
  - name: gaia
    image: publicawesome/gaia:6.0.0
    detach: true
    commands:
      - ./scripts/ci/setup-gaia.sh
    environment:
      GOPROXY: http://goproxy
  - name: osmosis
    image: publicawesome/osmosis:6.0.0
    detach: true
    commands:
      - ./scripts/ci/setup-osmosis.sh
    environment:
      GOPROXY: http://goproxy
  - name: stargaze
    image: publicawesome/golang:1.18.0-devtooling
    volumes:
      - name: cache
        path: /go
    commands:
      - ./scripts/ci/setup-stargaze.sh
    environment:
      GOPROXY: http://goproxy
    detach: true
  - name: readiness
    image: publicawesome/stargaze-readiness-checker:latest
    settings:
      timeout: 300
      blocks: 10
      chain_list:
        - http://stargaze:26657
        - http://gaia:26657
        - http://osmosis:26657
  - name: relayer
    image: publicawesome/hermes:0.10.0
    commands:
      - /bin/bash ./scripts/ci/setup-relayer.sh

  - name: relayer-start
    image: publicawesome/hermes:0.10.0
    commands:
      - /bin/bash ./scripts/ci/start-relayer.sh
    detach: true
  - name: relayer-sender
    image: publicawesome/hermes:0.10.0
    commands:
      - /bin/bash ./scripts/ci/transfer-relayer.sh
  - name: discord
    image: appleboy/drone-discord
    settings:
      webhook_id: 
        from_secret: discord_webhook_id
      webhook_token: 
        from_secret: discord_webhook_token
    when:
      status: [success, failure]

trigger:
  branch:
    - main
  event:
    - pull_request
    - push
volumes:
- name: cache
  temp: {}
node:
  runner: integration
---
kind: signature
hmac: 1b70f607f8387bae975b31a970be31042fab27385f31a7fc54b8b90087a6d626

...
