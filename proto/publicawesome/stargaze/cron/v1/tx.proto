syntax = "proto3";
package publicawesome.stargaze.cron.v1;

import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";

option go_package = "github.com/public-awesome/stargaze/v12/x/cron/types";

// Msg defines the alloc Msg service.
service Msg {
  rpc PromoteToPrivilegedContract(MsgPromoteToPrivilegedContract)
      returns (MsgPromoteToPrivilegedContractResponse);

  rpc DemoteFromPrivilegedContract(MsgDemoteFromPrivilegedContract)
      returns (MsgDemoteFromPrivilegedContractResponse);
}

message MsgPromoteToPrivilegedContract {
  option (cosmos.msg.v1.signer) = "authority";
  // Authority is the address of the governance account or any whitelisted address
  string authority = 1;
  // Contract is the bech32 address of the smart contract
  string contract = 2;
}

message MsgPromoteToPrivilegedContractResponse {}

message MsgDemoteFromPrivilegedContract {
    option (cosmos.msg.v1.signer) = "authority";
    // Authority is the address of the governance account or any whitelisted address
    string authority = 1;
    // Contract is the bech32 address of the smart contract
    string contract = 2;
}

message MsgDemoteFromPrivilegedContractResponse {}
